- name: Copy OSB installer files
  copy: src={{package_location}}/{{ osb_installer }} dest={{ software_location }}/
  tags:
    - install-osb

- name: Copy osb installer response file
  template: src=osb.installer.rsp dest={{ software_location }}/
  tags:
    - install-osb

- name: Check if OSB is already intalled
  stat: path='{{ oracle_home }}/osb/config'
  register: osb_installation_exists

- name: Run osb software installer
  command: "{{ java_home }}/bin/java -Xms1024m -Xmx1024m -jar {{ software_location }}/{{ osb_installer }} -silent -responseFile {{ software_location }}/osb.installer.rsp -invPtrLoc {{ software_location }}/oraInst.loc"
  when: osb_installation_exists.stat.exists == False
  tags:
    - install-osb

- name: copy extend OSB domain python script
  template: src=extend-domain.py dest={{ software_location }} 
  when: inventory_hostname == ansible_play_hosts[0]

- name: Execute extend OSB domain script
  shell: "{{ oracle_home }}/oracle_common/common/bin/wlst.sh {{ software_location }}/extend-domain.py"
  register: out
  when: ( inventory_hostname == ansible_play_hosts[0] )

- name: Remove old template
  file:
    state: absent
    path: "{{ shared_config_dir }}/soadomaintemplate.jar"
  when: ( inventory_hostname == ansible_play_hosts[0] )

- name: Pack domain for distribution
  shell: "{{ oracle_common_home }}/common/bin/pack.sh -managed=true -domain={{ aserver_home }} -template={{ shared_config_dir }}/soadomaintemplate.jar -template_name=soa_{{ domain_name }}_template"
  when: inventory_hostname in ansible_play_hosts[0]

- name: Unpack domain on all hosts
  shell: "{{ oracle_common_home }}/common/bin/unpack.sh -domain={{ mserver_home }} -overwrite_domain=true -template={{ shared_config_dir }}/soadomaintemplate.jar -log_priority=DEBUG -log=/tmp/unpack.log -app_dir={{ application_home }}"

- name: Add to start scripts
  lineinfile: dest="{{ wlscripts }}/config/midctl_{{ansible_hostname}}.cfg" backrefs=True state=present regexp='^hostedComponents=(.*)' line='hostedComponents=\\1,WebLogic-{{ domain_name }}-OSB_Server{{ play_hosts.index(inventory_hostname) +1 }}'

- name: Add to start scripts
  lineinfile: dest="{{ wlscripts }}/config/midctl_{{ansible_hostname}}.cfg" state=present insertafter='EOF' line='WebLogic-{{ domain_name }}-OSB_Server{{ play_hosts.index(inventory_hostname) +1 }}-serverName=OSB_Server{{ play_hosts.index(inventory_hostname) +1 }}'
